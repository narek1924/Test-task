{
  "version": 3,
  "sources": ["../../react-yandex-login/src/YandexLogout.js", "../../react-yandex-login/src/YandexHiddenFrame.js", "../../react-yandex-login/src/YandexLogin.js"],
  "sourcesContent": ["import React from 'react';\n\nexport default function YandexLogout(props) {\n  const onClick = () => {\n    sessionStorage.setItem('yandexAutoLoginDisabled', 'true');\n    props.onSuccess();\n  };\n\n  return (\n    <div>\n        { React.cloneElement( props.children, { onClick: onClick } ) }\n    </div>\n  );\n}", "import React from 'react';\n\nexport default function YandexHiddenFrame(props) {\n  return (\n    <iframe hidden title=\"yandex-hidden-frame\" src={props.redirectTo}></iframe>\n  );\n}", "import React, { useEffect } from 'react';\nimport YandexHiddenFrame from './YandexHiddenFrame';\n// import logo from './yandex_login.png';\n\nfunction checkAccessKey() {\n  const parts = window.location.href.split('#')\n  const queryPartUrl = parts.length > 1 && parts[1] !== 'frame' ? parts[1] : null;\n  if (!queryPartUrl) {\n    return null;\n  }\n  var result = {};\n  queryPartUrl.split(\"&\").forEach(function (part) {\n    var item = part.split(\"=\");\n    result[item[0]] = decodeURIComponent(item[1]);\n  });\n  return result;\n}\n\nfunction getYandexAuthUrl(clientID, redirectUrl) {\n  let requestUrl = 'https://oauth.yandex.ru/authorize?response_type=token&client_id=' + clientID;\n  requestUrl += '&redirect_uri=' + encodeURIComponent(redirectUrl);\n  requestUrl += '&display=popup';\n  return requestUrl;\n}\n\nfunction getCurrentUrl() {\n  let currentUrl = window.location.origin;\n  if (currentUrl[currentUrl.length - 1] === '/') {\n    currentUrl = currentUrl.slice(0, currentUrl.length - 1)\n  }\n  return currentUrl;\n}\n\nexport default function YandexLogin(props) {\n  const handleMessageFromPopup = (event) => {\n    if (event.data.source === 'yandex-login') {\n      props.onSuccess(event.data.payload);\n    }\n  }\n\n  const onClick = () => {\n    sessionStorage.setItem('yandexAutoLoginDisabled', 'false');\n    let currentUrl = getCurrentUrl();\n    const requestUrl = getYandexAuthUrl(props.clientID, currentUrl)\n\n    const h = 650;\n    const w = 550;\n    const y = window.top.outerHeight / 2 + window.top.screenY - (h / 2);\n    const x = window.top.outerWidth / 2 + window.top.screenX - (w / 2);\n    window.open(requestUrl, 'popup', `width=${w},height=${h},top=${y},left=${x}`);\n\n    window.addEventListener('message', handleMessageFromPopup, { once: true });\n  }\n\n  let frameRedirectTo = null;\n\n  const aki = checkAccessKey();\n  const receiver = window.parent !== window\n    ? window.parent\n    : window.opener;\n\n  useEffect(() => {\n    if (aki && receiver) {\n      receiver.postMessage({\n        source: 'yandex-login',\n        payload: aki\n      }, window.location.origin);\n      \n      window.close();\n    }\n  });\n\n  \n\n  if (!aki && !receiver) {\n    const autoLoginDIsabled = sessionStorage.getItem('yandexAutoLoginDisabled');\n\n    frameRedirectTo = autoLoginDIsabled !== 'true' \n      ? getYandexAuthUrl(props.clientID, getCurrentUrl())\n      : null;\n    \n    window.addEventListener('message', handleMessageFromPopup, { once: false });\n  }\n\n  return (\n    <div>\n      { React.cloneElement( props.children, { onClick: onClick } ) }\n      {/* <img src={logo} alt=\"yandex\" onClick={onClick} className=\"yandex-login-button\" /> */}\n      {frameRedirectTo && <YandexHiddenFrame redirectTo={frameRedirectTo} />}\n    </div>\n  );\n}"],
  "mappings": "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",
  "names": ["YandexLogout", "props", "onClick", "sessionStorage", "setItem", "onSuccess", "React", "cloneElement", "children", "YandexHiddenFrame", "redirectTo", "checkAccessKey", "parts", "window", "location", "href", "split", "queryPartUrl", "length", "result", "forEach", "part", "item", "decodeURIComponent", "getYandexAuthUrl", "clientID", "redirectUrl", "requestUrl", "encodeURIComponent", "getCurrentUrl", "currentUrl", "origin", "slice", "YandexLogin", "handleMessageFromPopup", "event", "data", "source", "payload", "h", "w", "y", "top", "outerHeight", "screenY", "x", "outerWidth", "screenX", "open", "addEventListener", "once", "frameRedirectTo", "aki", "receiver", "parent", "opener", "useEffect", "postMessage", "close", "autoLoginDIsabled", "getItem"]
}
