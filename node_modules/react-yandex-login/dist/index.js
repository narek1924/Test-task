function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);

function YandexLogout(props) {
  var onClick = function onClick() {
    sessionStorage.setItem('yandexAutoLoginDisabled', 'true');
    props.onSuccess();
  };

  return /*#__PURE__*/React__default.createElement("div", null, React__default.cloneElement(props.children, {
    onClick: onClick
  }));
}

function YandexHiddenFrame(props) {
  return /*#__PURE__*/React__default.createElement("iframe", {
    hidden: true,
    title: "yandex-hidden-frame",
    src: props.redirectTo
  });
}

function checkAccessKey() {
  var parts = window.location.href.split('#');
  var queryPartUrl = parts.length > 1 && parts[1] !== 'frame' ? parts[1] : null;

  if (!queryPartUrl) {
    return null;
  }

  var result = {};
  queryPartUrl.split("&").forEach(function (part) {
    var item = part.split("=");
    result[item[0]] = decodeURIComponent(item[1]);
  });
  return result;
}

function getYandexAuthUrl(clientID, redirectUrl) {
  var requestUrl = 'https://oauth.yandex.ru/authorize?response_type=token&client_id=' + clientID;
  requestUrl += '&redirect_uri=' + encodeURIComponent(redirectUrl);
  requestUrl += '&display=popup';
  return requestUrl;
}

function getCurrentUrl() {
  var currentUrl = window.location.origin;

  if (currentUrl[currentUrl.length - 1] === '/') {
    currentUrl = currentUrl.slice(0, currentUrl.length - 1);
  }

  return currentUrl;
}

function YandexLogin(props) {
  var handleMessageFromPopup = function handleMessageFromPopup(event) {
    if (event.data.source === 'yandex-login') {
      props.onSuccess(event.data.payload);
    }
  };

  var onClick = function onClick() {
    sessionStorage.setItem('yandexAutoLoginDisabled', 'false');
    var currentUrl = getCurrentUrl();
    var requestUrl = getYandexAuthUrl(props.clientID, currentUrl);
    var h = 650;
    var w = 550;
    var y = window.top.outerHeight / 2 + window.top.screenY - h / 2;
    var x = window.top.outerWidth / 2 + window.top.screenX - w / 2;
    window.open(requestUrl, 'popup', "width=" + w + ",height=" + h + ",top=" + y + ",left=" + x);
    window.addEventListener('message', handleMessageFromPopup, {
      once: true
    });
  };

  var frameRedirectTo = null;
  var aki = checkAccessKey();
  var receiver = window.parent !== window ? window.parent : window.opener;
  React.useEffect(function () {
    if (aki && receiver) {
      receiver.postMessage({
        source: 'yandex-login',
        payload: aki
      }, window.location.origin);
      window.close();
    }
  });

  if (!aki && !receiver) {
    var autoLoginDIsabled = sessionStorage.getItem('yandexAutoLoginDisabled');
    frameRedirectTo = autoLoginDIsabled !== 'true' ? getYandexAuthUrl(props.clientID, getCurrentUrl()) : null;
    window.addEventListener('message', handleMessageFromPopup, {
      once: false
    });
  }

  return /*#__PURE__*/React__default.createElement("div", null, React__default.cloneElement(props.children, {
    onClick: onClick
  }), frameRedirectTo && /*#__PURE__*/React__default.createElement(YandexHiddenFrame, {
    redirectTo: frameRedirectTo
  }));
}

exports.YandexLogin = YandexLogin;
exports.YandexLogout = YandexLogout;
//# sourceMappingURL=index.js.map
